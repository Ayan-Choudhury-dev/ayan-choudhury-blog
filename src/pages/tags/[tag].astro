---
import { type CollectionEntry, getCollection } from 'astro:content';
import PageLayout from '@layouts/PageLayout.astro';
import Container from '@components/Container.astro';
import ArrowCard from '@components/ArrowCard.astro';

export async function getStaticPaths() {
  const allPosts = (await getCollection('blog'))
    .filter((post) => !post.data.draft)
    .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

  const allTags = new Set<string>();
  allPosts.forEach((post) => {
    post.data.tags?.forEach((tag) => allTags.add(tag));
  });

  return Array.from(allTags).map((tag) => ({
    params: { tag },
    props: {
      posts: allPosts.filter((post) => post.data.tags?.includes(tag)),
    },
  }));
}

const params = Astro.params as { tag: string };
const props = Astro.props as { posts: CollectionEntry<'blog'>[] };
---

<PageLayout title={params.tag} description={params.tag}>
  <Container>
    <p>Posts tagged with {params.tag}</p>
    <div class="mt-10 flex-col gap-16">
      {props.posts.map((post) => (
        <ArrowCard entry={post} />
      ))}
    </div>
  </Container>
</PageLayout>
